--[[--------------------------------------------------
ScriptName  : 
Authors     : 
Version     : 1.0
Feedback    : Nazgool email - nazgool@ukr.net
------------------------------------------------------
Description : Advanced User Interface (AUI)
              
              Библиотека работы с интерфейсом, позволяющая производить динамическое скриптовое управление окнами,
              сочетающая в себе как возможности оригинальных классов, так и новые методы, позволяющие скриптовое
              управление теми возможностями атрибутов XML тегов, которые могли быть заданы только в XML файлах.
              
              Кроме того добавлены новые классы и методы, позволяющие производить построение окон, полностью или
              частично используя относительное позиционирование. Это позволяет упростить процесс расположени
              окон относительно родительских и производить автоматический пересчет координат и  размеров окон
              при их изменении.
              
              Также изменено и содержимое окна. Теперь каждое созданное AUI-окно имеет свой фон, который может
              быть задан как цветом (argb) так текстурой. Это может быть использовано как для декорирования
              интерфейса, так и для подсветки окон в процессе разработки.
              
              Библиотека использует один динамический прокси-файл XML, являющийся "сервером" для создания
              динамических XML-данных для каждого элемента интерфейса. Эти данные сохраняются в объекте окна,
              поэтому необходимости в XML-описателях нет. Все настройки окон теперь производятся в скрипте, что
              позволяет динамически изменять любые (доступные) параметры окна.
------------------------------------------------------
Connection  : 
UsesFiles   : 
UsesLibs    : Lua extensions by RvP
UsesClasses : 
--]]--------------------------------------------------

-- Таблица '_G.aui'. Необходимо линковать на '_G', иначе глобальное окружение будет надоступно -------------------
aui = setmetatable({}, {__index = _G})

-- Временная функция. Загрузка файлов в окружение 'aui' ----------------------------------------------------------
-- 'module_name' - путь к файлу-модулю, относительно папки 'aui' ('scripts/lua/aui/')
-- 'env' - в какое окружение будет загружен модуль. По умолчанию в '_G.aui'
-- 'lua_path' определен в '_g.script'
function aui.import (module_name, env)
    local f = loadfile(lua_path..'/aui/'..module_name..'.lua')
    if f then
        setfenv(f, env or aui)
        f()
    end
end

-- Временная функция. Перенос классов, созданных при помощи функции 'class' в окружение 'aui' --------------------
function aui.class(class_name)
    local f = class(class_name)
    aui[class_name] = _G[class_name]
    _G[class_name] = nil
    return f
end

------------------------------------------------------------------------------------------------------------------
local import = aui.import

-- Загрузка данных ядра-------------------------------------------------------------------------------------------
--import ('core/fonts', aui._) -- пока на фиг не нужны. не до них :)
import ('core/const')
import ('core/utils')
import ('core/global', _G)

-- Загрузка aui-классов ------------------------------------------------------------------------------------------
local classes = {
    'window',
        'dialog',
            'script_wnd',
--            'message_box_ex',
        'static',
--            'button',
--                'button_3t',
}

for i = 1, #classes do
    import('classes/'..classes[i])
end

-- Зачистить временные данные ------------------------------------------------------------------------------------
aui.import = nil
aui.class  = nil

